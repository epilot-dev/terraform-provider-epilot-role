// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"encoding/json"
	tfTypes "github.com/epilot-dev/terraform-provider-epilot-role/internal/provider/types"
	"github.com/epilot-dev/terraform-provider-epilot-role/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"time"
)

func (r *RoleDataSourceModel) RefreshFromSharedRole(resp *shared.Role) {
	if resp != nil {
		if resp.ExpiresAt != nil {
			r.ExpiresAt = types.StringValue(resp.ExpiresAt.Format(time.RFC3339Nano))
		} else {
			r.ExpiresAt = types.StringNull()
		}
		r.Grants = []tfTypes.Grant1{}
		if len(r.Grants) > len(resp.Grants) {
			r.Grants = r.Grants[:len(resp.Grants)]
		}
		for grantsCount, grantsItem := range resp.Grants {
			var grants1 tfTypes.Grant1
			grants1.Action = types.StringValue(grantsItem.Action)
			grants1.Conditions = []tfTypes.GrantCondition{}
			for conditionsCount, conditionsItem := range grantsItem.Conditions {
				var conditions1 tfTypes.GrantCondition
				if conditionsItem.EqualsCondition != nil {
					conditions1.EqualsCondition = &tfTypes.EqualsCondition{}
					conditions1.EqualsCondition.Attribute = types.StringValue(conditionsItem.EqualsCondition.Attribute)
					conditions1.EqualsCondition.Operation = types.StringValue(string(conditionsItem.EqualsCondition.Operation))
					conditions1.EqualsCondition.Values = nil
					for _, valuesItem := range conditionsItem.EqualsCondition.Values {
						var values1 types.String
						values1Result, _ := json.Marshal(valuesItem)
						values1 = types.StringValue(string(values1Result))
						conditions1.EqualsCondition.Values = append(conditions1.EqualsCondition.Values, values1)
					}
				}
				if conditionsCount+1 > len(grants1.Conditions) {
					grants1.Conditions = append(grants1.Conditions, conditions1)
				} else {
					grants1.Conditions[conditionsCount].EqualsCondition = conditions1.EqualsCondition
				}
			}
			if grantsItem.Effect != nil {
				grants1.Effect = types.StringValue(string(*grantsItem.Effect))
			} else {
				grants1.Effect = types.StringNull()
			}
			grants1.Resource = types.StringPointerValue(grantsItem.Resource)
			if grantsCount+1 > len(r.Grants) {
				r.Grants = append(r.Grants, grants1)
			} else {
				r.Grants[grantsCount].Action = grants1.Action
				r.Grants[grantsCount].Conditions = grants1.Conditions
				r.Grants[grantsCount].Effect = grants1.Effect
				r.Grants[grantsCount].Resource = grants1.Resource
			}
		}
		r.ID = types.StringValue(resp.ID)
		r.Name = types.StringValue(resp.Name)
		r.OrganizationID = types.StringValue(resp.OrganizationID)
		r.PartnerOrgID = types.StringPointerValue(resp.PartnerOrgID)
		r.PricingTier = types.StringPointerValue(resp.PricingTier)
		r.Slug = types.StringValue(resp.Slug)
		r.Type = types.StringValue(string(resp.Type))
	}
}
