// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/epilot-dev/terraform-provider-epilot-role/internal/sdk/models/shared"
	"net/http"
)

type GetAllRolesRequest struct {
	// The maximum number of user to get
	Limit *string `queryParam:"style=form,explode=true,name=limit"`
	// The primary key of the first item that this operation will evaluate
	StartKey *string `queryParam:"style=form,explode=true,name=start_key"`
}

func (o *GetAllRolesRequest) GetLimit() *string {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *GetAllRolesRequest) GetStartKey() *string {
	if o == nil {
		return nil
	}
	return o.StartKey
}

// LastEvaluatedKey - The key to use for pagination
type LastEvaluatedKey struct {
	Pk *string `json:"pk,omitempty"`
	Sk *string `json:"sk,omitempty"`
}

func (o *LastEvaluatedKey) GetPk() *string {
	if o == nil {
		return nil
	}
	return o.Pk
}

func (o *LastEvaluatedKey) GetSk() *string {
	if o == nil {
		return nil
	}
	return o.Sk
}

// GetAllRolesResponseBody - ok
type GetAllRolesResponseBody struct {
	// The key to use for pagination
	LastEvaluatedKey *LastEvaluatedKey `json:"lastEvaluatedKey,omitempty"`
	Roles            []shared.OrgRoles `json:"roles,omitempty"`
}

func (o *GetAllRolesResponseBody) GetLastEvaluatedKey() *LastEvaluatedKey {
	if o == nil {
		return nil
	}
	return o.LastEvaluatedKey
}

func (o *GetAllRolesResponseBody) GetRoles() []shared.OrgRoles {
	if o == nil {
		return nil
	}
	return o.Roles
}

type GetAllRolesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// ok
	Object *GetAllRolesResponseBody
}

func (o *GetAllRolesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetAllRolesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetAllRolesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetAllRolesResponse) GetObject() *GetAllRolesResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
